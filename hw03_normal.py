# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
    a = [1, 1]
    for i in range(m - len(a)):
        a.append(a[-1] + a[-2])
    return a[n: m]

print(fibonacci(1, 20))
print(fibonacci(8, 25))
print(fibonacci(3, 40))

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


def sort_to_max(origin_list):
    for i in range(len(origin_list)):
        for j in range(len(origin_list) - 1, i, -1):
            if origin_list[j] < origin_list[j - 1]:
                origin_list[j], origin_list[j - 1] = origin_list[j - 1], origin_list[j]

    return origin_list

print(sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

def figure(a1, a2, a3, a4):

    def central(a, b):
        return ((a[0] + b[0]) / 2, (a[1] + b[1]) / 2)

    if a1 == a3:
        return "Не является параллелограмом"
    elif central(a1, a3) == central(a2, a4):
        return "Является параллелограмом"

print("Фигура с вершинами:", (6, 8), (5, 1), (0, 1), (1, 3), figure((1, 1), (1, 1), (1, 1), (1, 1)))
print("Фигура с вершинами:", (0, 0), (2, 2), (8, 2), (6, 0), figure((0, 0), (2, 2), (8, 2), (6, 0)))

